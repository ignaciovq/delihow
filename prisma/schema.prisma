// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int               @id @default(autoincrement())
  email          String            @unique @db.VarChar(35)
  name           String            @db.VarChar(20)
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  Favorites      FavoriteRecipes[]
  CreatedRecipes Recipe[]
  History        History?
}

model Recipe {
  id             Int               @id @default(autoincrement())
  title          String            @db.VarChar(50)
  description    String?           @db.VarChar(200)
  complexity     Complexity
  prepTime       Int
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  Creator        User              @relation(fields: [userId], references: [id])
  userId         Int
  Steps          String
  Ingredients    Ingredient[]
  Comments       Comment[]
  Rating         Rating[]
  Tags           TagOnRecipe[]
  Image          Image[]
  FavoriteOfUser FavoriteRecipes[]
  RecipeHistory  RecipeHistory[]
}

model FavoriteRecipes {
  id       Int    @id @default(autoincrement())
  User     User   @relation(fields: [userId], references: [id])
  userId   Int
  Recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
}

model Tag {
  id      Int           @id @default(autoincrement())
  name    String        @db.VarChar(15)
  Recipes TagOnRecipe[]
}

model TagOnRecipe {
  id       Int    @id @default(autoincrement())
  Tag      Tag    @relation(fields: [tagId], references: [id])
  tagId    Int
  Recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
}

model Comment {
  id       Int    @id @default(autoincrement())
  text     String @db.VarChar(255)
  Recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
}

model Rating {
  id       Int    @id @default(autoincrement())
  value    Int
  Recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
}

model Ingredient {
  id       Int     @id @default(autoincrement())
  name     String  @unique @db.VarChar(30)
  Recipe   Recipe? @relation(fields: [recipeId], references: [id])
  recipeId Int?
}

model History {
  id      Int             @id @default(autoincrement())
  Recipes RecipeHistory[]
  User    User            @relation(fields: [userId], references: [id])
  userId  Int             @unique
}

model RecipeHistory {
  id        Int     @id @default(autoincrement())
  History   History @relation(fields: [historyId], references: [id])
  historyId Int
  Recipe    Recipe  @relation(fields: [recipeId], references: [id])
  recipeId  Int
}

model Image {
  id       Int    @id @default(autoincrement())
  url      String @db.VarChar(50)
  Recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
}

enum Complexity {
  Easy
  Medium
  Hard
}
